version: '3.8'

services:
  # MongoDB Service
  mongo:
    image: mongo:6.0 # Using a specific version for stability
    container_name: mongo_db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Service (for Celery)
  redis:
    image: redis:7.0-alpine
    container_name: redis_broker
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Flask Application (API)
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask_api
    ports:
      - "8000:8000"
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env # Pass environment variables from a .env file
    environment:
      - FLASK_ENV=production
      # Point to the Docker network hostnames for dependencies
      - MONGO_URI=mongodb://mongo:27017/doc_analyzer_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      # Ollama host is assumed to be on the host machine
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
    # The command to run the production server (Gunicorn)
    command: gunicorn --bind 0.0.0.0:8000 "main:app"

  # Celery Worker Service
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - MONGO_URI=mongodb://mongo:2701f7/doc_analyzer_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
    # The command to start the Celery worker
    command: celery -A main.celery worker --loglevel=info

volumes:
  mongo_data:
  redis_data:
